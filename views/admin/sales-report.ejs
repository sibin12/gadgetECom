<head>
    <!-- jQuery CDN -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Toastr CDN -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<!-- Bootstrap CSS CDN -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<!-- Bootstrap JS CDN -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <style>
            #toast-container .toast-error {
  color: red;
  background-color: rgb(120, 132, 194);
}
    .red-error {
  color: red;
  font-weight: bold;
}
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .title {
            text-align: center;
        }

        .form {
            display: flex;
            flex-direction: column;
            margin-top: 20px;
        }

        .form-label {
            margin-bottom: 10px;
        }

        .form-input {
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .btn-generate {
            padding: 10px 20px;
            background-color: #4287f5;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        .report {
            margin-top: 20px;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1 class="title">Sales Report</h1>

        <form id="reportForm" class="form">
            <label for="startDate" class="form-label">Start Date:</label>
            <input type="date" id="startDate" name="startDate" class="form-input" required>

            <label for="endDate" class="form-label">End Date:</label>
            <input type="date" id="endDate" name="endDate" class="form-input" required>

            <button type="submit" class="btn-generate">Generate Report</button>
        </form>

        <div id="salesReport" class="report"></div>
    </div>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>
    <script src="https://unpkg.com/xlsx/dist/xlsx.full.min.js"></script>
    <script>
//          document.getElementById('reportForm').addEventListener('submit', function(event) {
//     var startDate = new Date(document.getElementById('startDate').value);
//     var endDate = new Date(document.getElementById('endDate').value);

//     if (endDate < startDate) {
//       event.preventDefault(); // Prevent form submission
//       alert("End date should be greater than or equal to the start date.");
//     }
//   });
    </script>
    <script>
        const reportForm = document.getElementById('reportForm');
        const salesReportSection = document.getElementById('salesReport');

        reportForm.addEventListener('submit', (e) => {
            e.preventDefault();

            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            var currentDate = new Date();
            
    var currentYear = currentDate.getFullYear();
    var currentMonth = (currentDate.getMonth() + 1).toString().padStart(2, '0');
    var currentDay = currentDate.getDate().toString().padStart(2, '0');
    var currentDateFormatted = currentYear + '-' + currentMonth + '-' + currentDay;
console.log(currentDateFormatted);
            console.log(startDate, "jjjjjjjjjjjj");
            if (endDate < startDate) {
      event.preventDefault(); // Prevent form submission
      toastr.error("End date should be greater than or equal to the start date.")
    //   alert("End date should be greater than or equal to the start date.");
    } else if (startDate > currentDateFormatted) {
      event.preventDefault(); // Prevent form submission
      toastr.error("Start date should be less than or equal to the current date.");
    }
    
    else{

            // Make an AJAX request to the server with start and end dates
            // Replace the URL and method with your actual API endpoint
            fetch('/admin/generate-sales-report', {
                method: 'POST',
                body: JSON.stringify({ startDate, endDate }),
                headers: {
                    'Content-Type': 'application/json',
                },
            })
                .then((response) => response.json())
                .then((data) => {
                    // Update the sales report section with the generated report
                    salesReportSection.innerHTML = `
                    <div id="report">
    <h2>Sales Report (${startDate} - ${endDate})</h2>
    <table class="table"  id="myTable">
      <thead>
        <tr>
       
          <th>User</th>
          <th>Address</th>
          <th>Product</th>
          <th>Amount</th>
        </tr>
      </thead>
      <tbody>
        ${data.orders.map((order) => `
          <tr>
        
            <td>${order.userId.name}</td>
            <td>${order.deliveryDetails.firstName},${order.deliveryDetails.lastName},${order.deliveryDetails.streetAddress},
                ${order.deliveryDetails.town},${order.deliveryDetails.pin},
                ${order.deliveryDetails.number}</td>
            <td >${order.products.map((product) => product.item.name).join(', ')}</td>
            <td>${order.totalAmount}</td>
          </tr>
        `)}
      </tbody>
    </table>
    <p style="color:black;">Total Sales: ${data.totalSales}</p>
    <p style="color:black;">Revenue: ${data.revenue}</p>
    </div>
    <button onclick="downloadPDF()">Download PDF</button>
    <button onclick="salesReportExcel()">Exports to Excel</button>
    
  `;
                    let table = new DataTable("#myTable")

                })

                .catch((error) => {
                    console.error('Error generating sales report:', error);
                });

            }
        });



        function downloadPDF() {
            console.log("downloading ");
            // Get the sales report section element
            const salesReportSection = document.getElementById('myTable');

            // Convert the sales report section HTML to PDF
            html2pdf()
                .set({
                    margin: 10,
                    filename: 'sales_report.pdf',
                    image: { type: 'jpeg', quality: 0.98 },
                    html2canvas: { scale: 2 },
                    jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' },
                })
                .from(salesReportSection)
                .save();
        }


        function salesReportExcel() {
  var wb = XLSX.utils.book_new();
  var ws = XLSX.utils.table_to_sheet(document.querySelector('#myTable'));

  // Adjust column widths
  ws['!cols'] = [
    { wch: 20 }, // Customer Name
    { wch: 10 }, // Order ID
    { wch: 20 }, // Product Name
    { wch: 10 }, // Quantity
    { wch: 15 }, // Unit Price
    { wch: 15 }, // Total Price
  ];

  XLSX.utils.book_append_sheet(wb, ws, "Sales Report");

  // Save the Excel file
  XLSX.writeFile(wb, "Sales Report.xlsx");
}

    </script>
</body>
