

<div class="d-flex justify-content-center align-items-center container">
    <form action="/otpverify?number=<%=number %>" method="post" id="otpForm">
        <div class="card py-5 px-3">
            <h5 class="m-0">Mobile phone verification</h5>
            <span class="mobile-text">Enter the code we just sent on your mobile phone  
               <% if(number){ %>
                <b class="text-danger"> <%= number %> </b>
               <% } %></span>
            <div class="d-flex flex-row mt-5">
                <input type="text" name="code" class="form-control" autofocus placeholder="Enter OTP" autocomplete="off" maxlength="6" pattern="[0-9]{6}" required>
            </div>
            <% if(otpErr){ %>
            <p style="color: red;"><%= otpErr %></p>
            <% } %>


            <p id="countdown" style="color: rgb(193, 1, 126);"></p>
            <button id="resendBtn" onclick="resendOTP('<%= number %>')"class="mt-3 btn-primary " style="width: fit-content;">Resend OTP</button>

            <div class="text-center mt-5">
                
                <span class="d-block mobile-text"></span>
                <button type="submit">
                    <span class="font-weight-bold text-danger cursor">Verify</span>
                </button> 
            </div>
        </div>
    </form>
</div>
<script>
    
</script>
<script>
    document.getElementById("otpForm").addEventListener("submit", function(event) {
    const otpInput = document.querySelector('input[name="code"]');
    const otpValue = otpInput.value.trim();
  
    if (otpValue.length !== 6) {
        event.preventDefault(); // Prevent form submission
        // Show an error message or provide visual indication that 5 numbers are required
        // Example: You can display an error message near the input field
        const errorMessage = document.createElement("span");
        errorMessage.classList.add("text-danger");
        errorMessage.innerText = "Please enter a 6-digit OTP.";
        otpInput.parentNode.appendChild(errorMessage);
    }
});

const countdownElement = document.getElementById("countdown");

function startTimer(duration, display) {
    let timer = duration;
    let minutes, seconds;

    const intervalId = setInterval(() => {
        minutes = parseInt(timer / 60, 10);
        seconds = parseInt(timer % 60, 10);

        minutes = minutes < 10 ? `0${minutes}` : minutes;
        seconds = seconds < 10 ? `0${seconds}` : seconds;

        display.textContent = `${minutes}:${seconds}`;

        if (--timer < 0) {
            clearInterval(intervalId);
            display.textContent = 'OTP Expired';
            Swal.fire({
                title:"INFO",
                text:'OTP expired. Please request a new OTP.',
                icon:'info'
            })
            // Handle expired OTP scenario here
        }
    }, 1000);
}

const remainingTime = 60;

if (remainingTime > 0) {
    startTimer(remainingTime, countdownElement);
}

function resendOTP(number){
    console.log("otp resend")
    console.log(number)
    // const number = number;
    $.ajax({
    url:'/resend-otp',
    data:{
        mobile:number
    },
    method:'post',
    success: (response)=>{
        if(response.success == true){
            location.reload();
            Swal.fire({
               title:"OTP Resend",
               text:"otp resended to the number",
               icon:"success" 
            })
        }else{
            Swal.fire({
                title:"otp error",
                text:"otp can't resend",
                icon:"info"
            })
        }
    }
    })
}
    </script>